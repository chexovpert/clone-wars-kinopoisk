[{"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\index.js":"1","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\App.js":"2","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\actors\\actor.js":"4","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\car\\car.js":"5","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\films\\films.js":"6","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\castPage\\castPage.js":"7","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js":"8","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js":"9","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\scrollbutton\\scrollbutton.js":"10","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\header\\popup.js":"11","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\header\\header.js":"12","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchPage.js":"13","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterSearchResult.js":"14","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterSearchPage.js":"15","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\top\\top.js":"16","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\mainPage\\main.js":"17","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\search.js":"18","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterResult.js":"19","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filter.js":"20","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchPageResult.js":"21","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\top\\topResult.js":"22","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\factlist\\factlist.js":"23","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\casttable\\casttable.js":"24","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js":"25","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\graph\\graph.js":"26","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\table\\table.js":"27","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js":"28","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js":"29","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js":"30","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchresult.js":"31","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\footer\\footer.js":"32"},{"size":613,"mtime":1612125142380,"results":"33","hashOfConfig":"34"},{"size":3293,"mtime":1612125208491,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1612123134862,"results":"36","hashOfConfig":"34"},{"size":4969,"mtime":1612125142337,"results":"37","hashOfConfig":"34"},{"size":314,"mtime":1612123134861,"results":"38","hashOfConfig":"34"},{"size":3896,"mtime":1612125142363,"results":"39","hashOfConfig":"34"},{"size":2208,"mtime":1612125142359,"results":"40","hashOfConfig":"34"},{"size":3929,"mtime":1612125142402,"results":"41","hashOfConfig":"34"},{"size":1532,"mtime":1612125142410,"results":"42","hashOfConfig":"34"},{"size":792,"mtime":1612125142416,"results":"43","hashOfConfig":"34"},{"size":2596,"mtime":1612125142379,"results":"44","hashOfConfig":"34"},{"size":690,"mtime":1612125142378,"results":"45","hashOfConfig":"34"},{"size":4535,"mtime":1612125142432,"results":"46","hashOfConfig":"34"},{"size":1964,"mtime":1612125142430,"results":"47","hashOfConfig":"34"},{"size":5948,"mtime":1612125142429,"results":"48","hashOfConfig":"34"},{"size":1966,"mtime":1612125142436,"results":"49","hashOfConfig":"34"},{"size":133,"mtime":1612125142383,"results":"50","hashOfConfig":"34"},{"size":3227,"mtime":1612125142431,"results":"51","hashOfConfig":"34"},{"size":367,"mtime":1612125142422,"results":"52","hashOfConfig":"34"},{"size":19113,"mtime":1612125142419,"results":"53","hashOfConfig":"34"},{"size":496,"mtime":1612125142433,"results":"54","hashOfConfig":"34"},{"size":360,"mtime":1612125142437,"results":"55","hashOfConfig":"34"},{"size":947,"mtime":1612125142362,"results":"56","hashOfConfig":"34"},{"size":2143,"mtime":1612125142360,"results":"57","hashOfConfig":"34"},{"size":5715,"mtime":1612125142364,"results":"58","hashOfConfig":"34"},{"size":1883,"mtime":1612125142366,"results":"59","hashOfConfig":"34"},{"size":2261,"mtime":1612125142435,"results":"60","hashOfConfig":"34"},{"size":913,"mtime":1612125142349,"results":"61","hashOfConfig":"34"},{"size":805,"mtime":1612125142351,"results":"62","hashOfConfig":"34"},{"size":2262,"mtime":1612125142395,"results":"63","hashOfConfig":"34"},{"size":336,"mtime":1612125142434,"results":"64","hashOfConfig":"34"},{"size":499,"mtime":1612125342610,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oqwtmh",{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\index.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\App.js",["153","154","155"],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\reportWebVitals.js",[],["156","157"],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\actors\\actor.js",["158"],"import React from \"react\";\r\nimport \"./actor.css\";\r\nimport Graph from \"../graph/graph\";\r\nimport Table from \"../table/table\";\r\nimport Factlist from \"../factlist/factlist\";\r\nimport ActorTable from \"./actortable/actortable\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Actor extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  state = {\r\n    actors: null,\r\n    isLoaded: false,\r\n    error: null,\r\n    role: \"ACTOR\",\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff/${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            actors: result,\r\n          });\r\n          document.title = `${\r\n            result.nameRu ? result.nameRu : result.nameEn\r\n          } - Типокинопоиск`;\r\n          if (\"history\" in localStorage) {\r\n            let history = JSON.parse(localStorage.history);\r\n            if (!history.find((elem) => elem.nameRu === result.nameRu)) {\r\n              history.unshift(result);\r\n              history.length = history.length > 10 ? 10 : history.length;\r\n              let historyJSON = JSON.stringify(history);\r\n              localStorage.setItem(\"history\", historyJSON);\r\n            }\r\n          } else {\r\n            let history = [result];\r\n            let historyJSON = JSON.stringify(history);\r\n            localStorage.setItem(\"history\", historyJSON);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n  }\r\n  roleHandler(prop) {\r\n    this.setState({\r\n      role: prop,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    {/* <p onMouseEnter={this.props.showPopup} onMouseOver={this.props.chang.bind(this, film.filmId, true)}>\r\n                    {film.nameRu}\r\n                  </p> */}\r\n    {\r\n      const { error, isLoaded, actors } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n          <div>\r\n            Загрузка...\r\n            <img\r\n              alt=\"loadinggif\"\r\n              src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\"\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"actorWrap\">\r\n            <h2>{this.props.match.params.id}</h2>\r\n            <div className=\"actorTop\">\r\n              <div className=\"firstColumn\">\r\n                <div className=\"actorPic\">\r\n                  <img src={actors.posterUrl} alt=\"actorname\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"secondColumn\">\r\n                <div className=\"description\">\r\n                  <div className=\"actorName\">\r\n                    <h1>{actors.nameRu}</h1>\r\n                    <h2>{actors.nameEn}</h2>\r\n                    <h2>О персоне</h2>\r\n                  </div>\r\n                  <ActorTable actors={actors}></ActorTable>\r\n                </div>\r\n              </div>\r\n              <div className=\"thirdColumn\">\r\n                <p>\r\n                  <b>Лучшие фильмы</b>\r\n                </p>\r\n                {this.state.actors.films.map((film) =>\r\n                  film.general ? (\r\n                    <div>\r\n                      <NavLink to={\"/film/\" + film.filmId} exact>\r\n                        <p>{film.nameRu}</p>\r\n                      </NavLink>\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n                {actors.hasAwards ? (\r\n                  <div>\r\n                    <img\r\n                      src=\"https://st.kp.yandex.net/images/movies/awardOscar.png\"\r\n                      alt=\"actorname\"\r\n                    />\r\n                    <p>Наград: {actors.hasAwards}</p>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"actorBottom\">\r\n              <Factlist facts={this.state.actors.facts}></Factlist>\r\n              <Graph actor={this.state.actors} role={this.state.role}></Graph>\r\n              <Table\r\n                actors={this.state.actors}\r\n                role={this.state.role}\r\n                handler={this.roleHandler.bind(this)}\r\n              ></Table>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Actor;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\car\\car.js",["159"],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\films\\films.js",["160","161"],"import React, { Component } from \"react\";\r\nimport \"./films.css\";\r\nimport Factlist from \"../factlist/factlist\";\r\nimport CastTable from \"../casttable/casttable\";\r\nimport FilmTable from \"./filmtable/filmtable\";\r\nclass Films extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            films: result.data,\r\n          });\r\n          document.title = `${\r\n            result.data.nameRu ? result.data.nameRu : result.data.nameEn\r\n          } - Типокинопоиск`;\r\n          if (\"history\" in localStorage) {\r\n            let history = JSON.parse(localStorage.history);\r\n            if (!history.find((elem) => elem.nameRu === result.data.nameRu)) {\r\n              history.unshift(result.data);\r\n              history.length = history.length > 10 ? 10 : history.length;\r\n              let historyJSON = JSON.stringify(history);\r\n              localStorage.setItem(\"history\", historyJSON);\r\n            }\r\n          } else {\r\n            let history = [result.data];\r\n            let historyJSON = JSON.stringify(history);\r\n            localStorage.setItem(\"history\", historyJSON);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    {\r\n      const { error, isLoaded, films } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n          <div>\r\n            Загрузка...\r\n            <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"filmWrap\">\r\n            <h2>{this.props.match.params.id}</h2>\r\n            <div className=\"filmTop\">\r\n              <div className=\"firstColumn\">\r\n                <div className=\"filmPic\">\r\n                  <img src={films.posterUrl} alt=\"filmname\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"secondColumn\">\r\n                <div className=\"description\">\r\n                  <div className=\"actorName\">\r\n                    <h1>{films.nameRu}</h1>\r\n                    <h2>{films.nameEn}</h2>\r\n                    <h2>О фильме</h2>\r\n                  </div>\r\n                  <FilmTable\r\n                    film={films}\r\n                    id={this.props.match.params.id}\r\n                  ></FilmTable>\r\n                </div>\r\n              </div>\r\n              <div className=\"thirdColumn\">\r\n                <p>\r\n                  <b>В главных ролях</b>\r\n                </p>\r\n                <CastTable id={this.props.match.params.id}></CastTable>\r\n              </div>\r\n            </div>\r\n            <div className=\"filmBottom\">\r\n              <div className=\"filmDescription\">\r\n                <p>{films.description}</p>\r\n              </div>\r\n              <Factlist facts={this.state.films.facts}></Factlist>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default Films;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\castPage\\castPage.js",["162"],"import React from \"react\";\r\nimport CastElement from \"./castElement/castElement\";\r\nclass CastPage extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n    //console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      const staffarray = professions.map((elem) =>\r\n        staff.slice().filter((person) => person.professionKey === elem)\r\n      );\r\n      return staffarray.map((profession) =>\r\n        profession.length ? (\r\n          <CastElement staff={profession}></CastElement>\r\n        ) : null\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastPage;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js",["163"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./pagestory.css\";\r\n\r\nclass Pagestory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    historylocal: false,\r\n    history: null,\r\n  };\r\n  componentDidMount() {\r\n    if (\"history\" in localStorage) {\r\n      let history = JSON.parse(localStorage.history);\r\n      this.setState({\r\n        historylocal: true,\r\n        history: history,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.historylocal) {\r\n      // this.state.history.length =\r\n      //   this.state.history.length > 10 ? 10 : this.state.history.length;\r\n      //console.log(this.state.history);\r\n      return (\r\n        <div className=\"pageStoryWrapper\">\r\n          <p>Вы интересовались</p>\r\n          <div className=\"pageStory\">\r\n            {this.state.history.map((page) => (\r\n              <div>\r\n                <NavLink\r\n                  to={\r\n                    page.filmId\r\n                      ? \"/film/\" + page.filmId\r\n                      : \"/name/\" + page.personId\r\n                  }\r\n                  exact\r\n                >\r\n                  <img\r\n                    src={page.posterUrl}\r\n                    alt={page.nameRu}\r\n                    className=\"page_story_img\"\r\n                  ></img>\r\n                </NavLink>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else return <div className=\"staffList\"></div>;\r\n  }\r\n}\r\nexport default Pagestory;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\scrollbutton\\scrollbutton.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\header\\popup.js",["164"],"import \"./popup.css\";\r\nimport React from \"react\";\r\n\r\nclass Popup extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    // this.props = props;\r\n  }\r\n\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n\r\n  apiHandler(id) {\r\n    let prefics;\r\n    this.props.kFilm ? (prefics = \"v2.1/films\") : (prefics = \"v1/staff\");\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/${prefics}/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            result: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidUMount = () => {\r\n    this.apiHandler(this.props.kName);\r\n  };\r\n\r\n  componentDidUpdate = (prevId) => {\r\n    if (prevId.kName !== this.props.kName) {\r\n      this.apiHandler(this.props.kName);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n      if (this.props.kFilm) {\r\n        return (\r\n          <div className=\"popup-wrap\" onMouseLeave={removePopup}>\r\n            <img className=\"popup-poster\" src={this.state.result.data.posterUrl}></img>\r\n            <div className=\"popup-info\">\r\n              <h1>{this.state.result.data.nameRu}</h1>\r\n              <p id=\"popup-extra\">\r\n                {this.state.result.data.year} {this.state.result.data.nameEn}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        console.log(this.state.result);\r\n        return (\r\n          <div className=\"popup-wrap\" onMouseLeave={removePopup}>\r\n            {/* <img className=\"popup-poster\" src={this.state.result.posterUrl}></img>\r\n            <div className=\"popup-info\">\r\n              <h1>{this.state.result.nameRu}</h1>\r\n              <p>{this.state.result.nameEn}</p>\r\n              <p id=\"popup-extra\">\r\n                {this.state.result.profession}\r\n                {this.state.result.data.nameEn}\r\n              </p>\r\n            </div> */}\r\n            2\r\n          </div>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"popup-wrap\" onMouseLeave={removePopup}>\r\n          Загрузка...\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction removePopup() {\r\n  const popup = document.querySelector(\".popup-wrap\");\r\n  popup.style.display = \"none\";\r\n}\r\n\r\nexport default Popup;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\header\\header.js",["165","166"],"import React from \"react\";\r\nimport \"./header.css\";\r\nimport logo from \"./Burger.png\";\r\nimport Search from \"../search/search\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"logoTitle\">ТипоКинопоиск</div>\r\n    <div className=\"title\">\r\n      <img src={logo} className=\"logo\"></img>\r\n      <ul className=\"burger-menu\">\r\n        <li>Films</li>\r\n        <li>Shows</li>\r\n        <li>\r\n          <NavLink to=\"/top/TOP_250_BEST_FILMS/1\">Top 250 Films</NavLink>\r\n        </li>\r\n        <li>Top 250 shows</li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"search\">\r\n      <Search />\r\n    </div>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchPage.js",["167"],"import React from \"react\";\r\nimport \"./searchPage.css\";\r\nimport SearchPageResult from \"./searchPageResult\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nclass SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.showPopup = props.showPopup;\r\n    this.chang = props.chang;\r\n  }\r\n\r\n  state = {\r\n    films: [],\r\n    isLoaded: false,\r\n    error: null,\r\n    searchPageState: \"\",\r\n    pagesArr: [],\r\n  };\r\n\r\n  apiHandler(keyword) {\r\n    fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword?keyword=${keyword}&page=${this.props.match.params.page}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            films: result.films,\r\n            pages: result.pagesCount,\r\n          });\r\n          this.pagesArray(this.props.match.params.page);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.apiHandler(this.props.match.params.keyword);\r\n  };\r\n\r\n  componentDidUpdate = (prevId) => {\r\n    if (\r\n      prevId.match.params.keyword !== this.props.match.params.keyword ||\r\n      prevId.match.params.page !== this.props.match.params.page\r\n    ) {\r\n      this.apiHandler(this.props.match.params.keyword);\r\n    }\r\n  };\r\n\r\n  searchHandler = (event) => {\r\n    this.setState({\r\n      searchPageState: event.target.value,\r\n    });\r\n  };\r\n\r\n  pagesArray(page) {\r\n    const pages = parseInt(page);\r\n    if (this.state.pages > 20) {\r\n      this.setState({\r\n        pages: 20,\r\n      });\r\n    }\r\n    let array = [],\r\n      pagesArr = [];\r\n    for (let i = 1; i <= pages; i++) {\r\n      array.push(i);\r\n    }\r\n    if (pages < 4) {\r\n      pagesArr = [\"1\", \"2\", \"3\", \"4\", \"5\", \"...\", `${this.state.pages}`];\r\n    } else {\r\n      if (pages <= this.state.pages && pages > this.state.pages - 4) {\r\n        pagesArr = [\r\n          \"1\",\r\n          \"...\",\r\n          `${this.state.pages - 4}`,\r\n          `${this.state.pages - 3}`,\r\n          `${this.state.pages - 2}`,\r\n          `${this.state.pages - 1}`,\r\n          `${this.state.pages}`,\r\n        ];\r\n      } else {\r\n        pagesArr = [\r\n          \"1\",\r\n          \"...\",\r\n          `${pages - 2}`,\r\n          `${pages - 1}`,\r\n          `${pages}`,\r\n          `${pages + 1}`,\r\n          `${pages + 2}`,\r\n          \"...\",\r\n          `${this.state.pages}`,\r\n        ];\r\n      }\r\n    }\r\n    this.setState({\r\n      pagesArr: pagesArr,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-page-field\">\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={`Введите название фильма`}\r\n            className=\"searchpage-input\"\r\n            onChange={this.searchHandler}\r\n            value={this.state.searchPageState}\r\n          ></input>\r\n          <Link to={`/search/${this.state.searchPageState}/1`}>\r\n            <button>{\"Search\"}</button>\r\n          </Link>\r\n        </form>\r\n        <div className=\"search-page-result\">\r\n          <p>{`Результаты поиска по запросу ${this.props.match.params.keyword}`}</p>\r\n          {this.state.films.map((film) => {\r\n            return (\r\n              <SearchPageResult\r\n                key={film.filmId}\r\n                fId={film.filmId}\r\n                nameRu={film.nameRu}\r\n                nameEn={film.nameEn}\r\n                rating={film.rating}\r\n                posterUrl={film.posterUrl}\r\n                showPopup={this.showPopup}\r\n                chang={this.chang}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={\"seachpage-pages-wrap\"}>\r\n          {this.state.pagesArr.map((num) => {\r\n            if (num != \"...\") {\r\n              return (\r\n                <NavLink\r\n                  className=\"searchpage-pages\"\r\n                  to={`/search/${this.props.match.params.keyword}/${num}`}\r\n                >\r\n                  {num}\r\n                </NavLink>\r\n              );\r\n            } else {\r\n              return <p className=\"searchpage-pages\">{num}</p>;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterSearchResult.js",["168"],"import React from \"react\";\r\nimport FilterResult from \"./filterResult\";\r\n\r\nclass FilterSearchResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    films: [],\r\n  };\r\n\r\n  apiHandler(keyword) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-filters${keyword}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            films: result.films,\r\n            pages: result.pagesCount,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.apiHandler(this.props.location.search);\r\n  };\r\n\r\n  componentDidUpdate = (prevId) => {\r\n    if (\r\n      prevId.match.params.keyword !== this.props.match.params.keyword ||\r\n      prevId.match.params.page !== this.props.match.params.page\r\n    ) {\r\n      this.apiHandler(this.props.match.params.keyword);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.films);\r\n    return (\r\n      <div className=\"search-page-result\">\r\n        <p>{`Результаты поиска по запросу`}</p>\r\n        {this.state.films.map((film) => {\r\n          return (\r\n            <FilterResult\r\n              key={film.filmId}\r\n              fId={film.filmId}\r\n              nameRu={film.nameRu}\r\n              nameEn={film.nameEn}\r\n              rating={film.rating}\r\n              posterUrl={film.posterUrl}\r\n              // showPopup={this.showPopup}\r\n              // chang={this.chang}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterSearchResult;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterSearchPage.js",["169","170","171","172","173"],"import React from \"react\";\r\nimport \"./filterSearchPage.css\";\r\n// import SearchPageResult from \"./searchPageResult\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport filters from \"./filter\";\r\n\r\nclass FilterSearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.showPopup = props.showPopup;\r\n    this.chang = props.chang;\r\n  }\r\n\r\n  state = {\r\n    films: [],\r\n    isLoaded: false,\r\n    error: null,\r\n    filterRequest: \"\",\r\n    country: 0,\r\n    genre: 0,\r\n    sortbyprops: 0,\r\n    sortbytype: 0,\r\n    yearfrom: 1888,\r\n    yearto: 2021,\r\n    ratingfrom: 0,\r\n    ratingto: 10,\r\n  };\r\n\r\n  requestFormer = () => {\r\n    let rqst = [];\r\n    this.state.country !== 0 ? rqst.push(`country=${this.state.country}`) : rqst.push();\r\n    this.state.genre === 0 ? rqst.push() : rqst.push(`genre=${this.state.genre}`);\r\n    this.state.sortbyprops === 0 ? rqst.push(`order=RATING`) : rqst.push(`order=${this.state.sortbyprops}`);\r\n    this.state.sortbytype === 0 ? rqst.push(`type=ALL`) : rqst.push(`type=${this.state.sortbytype}`);\r\n    this.state.ratingfrom === 0 ? rqst.push() : rqst.push(`ratingFrom=${this.state.ratingfrom}`);\r\n    this.state.ratingto === 10 ? rqst.push() : rqst.push(`ratingTo=${this.state.ratingto}`);\r\n    this.state.yearfrom === 1888 ? rqst.push() : rqst.push(`yearFrom=${this.state.yearfrom}`);\r\n    this.state.yearto === 2021 ? rqst.push() : rqst.push(`yearTo=${this.state.yearto}`);\r\n    const reqst = rqst.join(\"&\");\r\n    this.setState({\r\n      filterRequest: reqst,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"filtersearch-wrap\"}>\r\n        <form\r\n          onChange={(event) => {\r\n            this.setState({\r\n              genre: event.target.value,\r\n            });\r\n          }}\r\n        >\r\n          <label>{\"Жанр \"}</label>\r\n          <select>\r\n            {filters.genres.map((genre) => {\r\n              return <option value={genre.id}>{genre.genre}</option>;\r\n            })}\r\n          </select>\r\n        </form>\r\n        <form\r\n          onChange={(event) => {\r\n            this.setState({\r\n              country: event.target.value,\r\n            });\r\n          }}\r\n        >\r\n          <label>{\"Страна \"}</label>\r\n          <select>\r\n            {filters.countries.map((country) => {\r\n              return <option value={country.id}>{country.country}</option>;\r\n            })}\r\n          </select>\r\n        </form>\r\n        <form\r\n          onChange={(event) => {\r\n            this.setState({\r\n              sortbyprops: event.target.value,\r\n            });\r\n          }}\r\n        >\r\n          <label>{\"Сортировать по: \"}</label>\r\n          <select>\r\n            <option value={0}>{\"Выберите...\"}</option>\r\n            <option value={\"RATING\"}>{\"По рейтингу\"}</option>\r\n            <option value={\"NUM_VOTE\"}>{\"По количеству оценок\"}</option>\r\n            <option value={\"YEAR\"}>{\"По году\"}</option>\r\n          </select>\r\n        </form>\r\n        <form\r\n          onChange={(event) => {\r\n            this.setState({\r\n              sortbytype: event.target.value,\r\n            });\r\n          }}\r\n        >\r\n          <label>{\"Выберите тип: \"}</label>\r\n          <select>\r\n            <option value={0}>{\"Выберите...\"}</option>\r\n            <option value={\"FILM\"}>{\"Фильмы\"}</option>\r\n            <option value={\"TV_SHOW\"}>{\"Сериалы\"}</option>\r\n            <option value={\"ALL\"}>{\"Фильмы и сериалы\"}</option>\r\n          </select>\r\n        </form>\r\n        <form>\r\n          <label>{\"Укажите год: с \"}</label>\r\n          <select\r\n            onChange={(event) => {\r\n              this.setState({\r\n                yearfrom: event.target.value,\r\n              });\r\n            }}\r\n          >\r\n            {Array(134)\r\n              .fill(0)\r\n              .map((e, i) => i + 1888)\r\n              .map((year) => {\r\n                {\r\n                  return <option value={year}>{year}</option>;\r\n                }\r\n              })}\r\n          </select>\r\n          <label>{\" по \"}</label>\r\n          <select\r\n            onChange={(event) => {\r\n              this.setState({\r\n                yearfrom: event.target.value,\r\n              });\r\n            }}\r\n          >\r\n            {Array(134)\r\n              .fill(0)\r\n              .map((e, i) => i + 1888)\r\n              .reverse()\r\n              .map((year) => {\r\n                {\r\n                  return <option value={year}>{year}</option>;\r\n                }\r\n              })}\r\n          </select>\r\n        </form>\r\n\r\n        <form>\r\n          <label>{\"Укажите рейтинг: с \"}</label>\r\n          <select\r\n            onChange={(event) => {\r\n              this.setState({\r\n                ratingfrom: event.target.value,\r\n              });\r\n            }}\r\n          >\r\n            {Array(11)\r\n              .fill(0)\r\n              .map((e, i) => i)\r\n              .map((rating) => {\r\n                {\r\n                  return <option value={rating}>{`${rating}.0`}</option>;\r\n                }\r\n              })}\r\n          </select>\r\n          <label>{\" по \"}</label>\r\n          <select\r\n            onChange={(event) => {\r\n              this.setState({\r\n                ratingto: event.target.value,\r\n              });\r\n            }}\r\n          >\r\n            {Array(11)\r\n              .fill(0)\r\n              .map((e, i) => i)\r\n              .map((rating) => {\r\n                {\r\n                  return <option value={rating}>{`${rating}.0`}</option>;\r\n                }\r\n              })}\r\n          </select>\r\n        </form>\r\n\r\n        <Link\r\n          to={{\r\n            pathname: \"/filterSearchResult\",\r\n            search: `?${this.state.filterRequest}&page=1`,\r\n          }}\r\n        >\r\n          <button onMouseOver={this.requestFormer}>{\"Search\"}</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterSearchPage;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\top\\top.js",["174","175"],"import React from \"react\";\r\nimport TopResult from \"./topResult\";\r\n\r\nclass Top extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    isLoaded: false,\r\n    result: null,\r\n    page: 1,\r\n    error: null,\r\n  };\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.type, this.props.match.params.page);\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    console.log(prevState.page);\r\n    if (prevState.page !== this.props.match.params.page || prevState.type !== this.props.match.params.type) {\r\n      // this.apiHandler(this.props.match.params.type, this.props.match.params.page);\r\n    }\r\n  }\r\n\r\n  apiHandler(type, page) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=${type}&page=${page}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            result: result.films,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.result);\r\n    return (\r\n      <div className=\"search-page-result\">\r\n        <p>{`Результаты поиска по запросу`}</p>\r\n        {/* {this.state.result.films.map((film) => {\r\n          return (\r\n            <TopResult\r\n              key={film.filmId}\r\n              fId={film.filmId}\r\n              nameRu={film.nameRu}\r\n              nameEn={film.nameEn}\r\n              rating={film.rating}\r\n              posterUrl={film.posterUrl}\r\n              // showPopup={this.showPopup}\r\n              // chang={this.chang}\r\n            />\r\n          );\r\n        })} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\mainPage\\main.js",["176"],"import React from \"react\";\r\n\r\nexport default () => (\r\n  <div style={{ textAlign: \"center\" }}>\r\n    <h1>Nain page</h1>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\search.js",["177","178","179"],"import React from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport \"./search.css\";\r\nimport Searchresult from \"./searchresult\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    searchState: \"\",\r\n    films: [],\r\n  };\r\n\r\n  apiHandler(searchState) {\r\n    fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-keyword?keyword=${searchState}&page=1`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          let filmsArray = result.films;\r\n          filmsArray.length = 5;\r\n          this.setState({\r\n            films: filmsArray,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  searchHandler = (event) => {\r\n    if (event.target.value.length > 1) {\r\n      this.setState({\r\n        searchState: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.searchState != \"\") this.apiHandler(this.state.searchState);\r\n  }\r\n\r\n  componentDidUpdate(prevId, prevState) {\r\n    if (this.state.searchState !== prevState.searchState) {\r\n      this.apiHandler(this.state.searchState);\r\n    }\r\n  }\r\n\r\n  searchResultHandler(a) {\r\n    const srscreen = document.querySelector(\".search-result\"),\r\n      body = document.querySelector(\".wrap\");\r\n    srscreen.style.display = \"block\";\r\n    body.addEventListener(\"click\", () => {\r\n      if (srscreen.style.display == \"block\") {\r\n        srscreen.style.display = \"none\";\r\n      }\r\n    });\r\n    if (a == \"a\") {\r\n      srscreen.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-field\">\r\n        <form className={\"search-form\"}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Введите запрос\"\r\n            className=\"search-input\"\r\n            onChange={this.searchHandler}\r\n            onFocus={this.searchResultHandler}\r\n          ></input>\r\n          <Link to={`/search/${this.state.searchState}/1`}>\r\n            <button className=\"search-button\">search</button>\r\n          </Link>\r\n        </form>\r\n        <div className=\"search-result\">\r\n          <p>{`Результаты поиска по запросу ${this.state.searchState}`}</p>\r\n          {this.state.films.map((film) => {\r\n            return (\r\n              <Searchresult\r\n                key={film.filmID}\r\n                nameRu={film.nameRu}\r\n                nameEn={film.nameEn}\r\n                rating={film.rating}\r\n                posterUrl={film.posterUrl}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <NavLink\r\n            to={{\r\n              pathname: `/search/${this.state.searchState}/1`,\r\n              // search: \"?test=1\",\r\n            }}\r\n            onClick={this.searchResultHandler.bind(this, \"a\")}\r\n          >{`Посмотреть все совпадения`}</NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Search);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filterResult.js",["180","181"],"import React from \"react\";\r\nimport \"./searchPageResult.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"search-page-result-field\">\r\n    <img className=\"searchpage-poster\" src={props.posterUrl}></img>\r\n    <div className=\"searchpage-title\">\r\n      <h1>{props.nameRu}</h1>\r\n      <p>\r\n        {props.rating} {props.nameEn}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\filter.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchPageResult.js",["182","183"],"import React from \"react\";\r\nimport \"./searchPageResult.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"search-page-result-field\">\r\n    <img className=\"searchpage-poster\" src={props.posterUrl}></img>\r\n    <div className=\"searchpage-title\">\r\n      <h1\r\n        onMouseEnter={props.showPopup}\r\n        onMouseOver={props.chang.bind(this, props.fId, true)}\r\n      >\r\n        {props.nameRu}\r\n      </h1>\r\n      <p>\r\n        {props.rating} {props.nameEn}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\top\\topResult.js",["184","185"],"import React from \"react\";\r\nimport \"./topResult.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"search-page-result-field\">\r\n    <img className=\"searchpage-poster\" src={props.posterUrl}></img>\r\n    <div className=\"searchpage-title\">\r\n      <h1>{props.nameRu}</h1>\r\n      <p>\r\n        {props.rating} {props.nameEn}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\factlist\\factlist.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\casttable\\casttable.js",["186"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      let actorArray = staff\r\n        .slice()\r\n        .filter((person) => person.professionKey === \"ACTOR\");\r\n      actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          {actorArray.map((actor) => (\r\n            <NavLink to={\"/name/\" + actor.staffId} exact>\r\n              <p>{actor.nameRu}</p>\r\n            </NavLink>\r\n          ))}\r\n          <NavLink to={\"/film/\" + this.props.id + \"/staff\"} exact>\r\n            Вся съемочная группа\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js",["187","188"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./filmtable.css\";\r\n\r\nclass FilmTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n    //console.log(this.state);\r\n  }\r\n  personHandler(arr, proffession) {\r\n    let arrlength = arr\r\n      .concat()\r\n      .filter((person) => person.professionKey === proffession);\r\n    arrlength.length = arrlength.length > 3 ? 3 : arrlength.length;\r\n    //console.log(arrlength);\r\n    return arrlength;\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <table className=\"aboutTable\">\r\n          <tr>\r\n            <th>Год производства</th>\r\n            <th>{this.props.film.year}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Страна</th>\r\n            <th>\r\n              {this.props.film.countries.map((country) => (\r\n                <p>{country.country}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Жанр</th>\r\n            <th>\r\n              {this.props.film.genres.map((genre) => (\r\n                <p>{genre.genre}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Слоган</th>\r\n            <th>{this.props.film.slogan}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Режиссер</th>\r\n            <th>\r\n              {this.personHandler(staff, \"DIRECTOR\").map((person) => (\r\n                <NavLink to={\"/name/\" + person.staffId}>\r\n                  <p>{person.nameRu}</p>\r\n                </NavLink>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сценарист</th>\r\n            <th>\r\n              {this.personHandler(staff, \"WRITER\").map((person) => (\r\n                <NavLink to={\"/name/\" + person.staffId}>\r\n                  <p>{person.nameRu}</p>\r\n                </NavLink>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Оператор</th>\r\n            <th>\r\n              {this.personHandler(staff, \"OPERATOR\").map((person) => (\r\n                <NavLink to={\"/name/\" + person.staffId}>\r\n                  <p>{person.nameRu}</p>\r\n                </NavLink>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Композитор</th>\r\n            <th>\r\n              {this.personHandler(staff, \"COMPOSER\").map((person) => (\r\n                <NavLink to={\"/name/\" + person.staffId}>\r\n                  <p>{person.nameRu}</p>\r\n                </NavLink>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Художник</th>\r\n            <th>\r\n              {this.personHandler(staff, \"DESIGN\").map((person) => (\r\n                <NavLink to={\"/name/\" + person.staffId}>\r\n                  <p>{person.nameRu}</p>\r\n                </NavLink>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          {this.props.film.budget ? (\r\n            <tr>\r\n              <th>Бюджет</th>\r\n              <th>{this.props.film.budget}</th>\r\n            </tr>\r\n          ) : null}\r\n          {this.props.film.grossUsa ? (\r\n            <tr>\r\n              <th>Сборы в США</th>\r\n              <th>{this.props.film.grossUsa}</th>\r\n            </tr>\r\n          ) : null}\r\n          {this.props.film.grossWorld ? (\r\n            <tr>\r\n              <th>Сборы в мире</th>\r\n              <th>{this.props.film.grossWorld}</th>\r\n            </tr>\r\n          ) : null}\r\n          <tr>\r\n            <th>Премьера в мире</th>\r\n            <th>{this.props.film.premiereWorld}</th>\r\n          </tr>\r\n          {this.props.film.ratingAgeLimits ? (\r\n            <tr>\r\n              <th>Возраст</th>\r\n              <th>{this.props.film.ratingAgeLimits}</th>\r\n            </tr>\r\n          ) : null}\r\n          {this.props.film.filmLength ? (\r\n            <tr>\r\n              <th>Время</th>\r\n              <th>{this.props.film.filmLength}</th>\r\n            </tr>\r\n          ) : null}\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default FilmTable;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\graph\\graph.js",["189","190"],"import React from \"react\";\r\nimport \"./graph.css\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    actor: null,\r\n    role: null,\r\n    chart: null,\r\n    ctx: null,\r\n    //   isLoaded: false,\r\n    //   error: null,\r\n    //   listToggle: false,\r\n    //   role: \"HIMSELF\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.state.chart.destroy();\r\n    this.buildChart();\r\n  }\r\n  buildChart() {\r\n    let actor = this.props.actor;\r\n    let role = this.props.role;\r\n\r\n    let filmtype = actor.films.filter((film) =>\r\n      film.professionKey === role && film.rating ? film : null\r\n    );\r\n    let filmlabel = filmtype.map((film) =>\r\n      film.nameRu ? film.nameRu : film.nameEn\r\n    );\r\n    let filmrating = filmtype.map((film) =>\r\n      film.rating.includes(\"%\")\r\n        ? film.rating.substring(0, film.rating.length - 1) / 10\r\n        : film.rating\r\n    );\r\n\r\n    //console.log(filmtype);\r\n    this.state.ctx = this.chartRef.current.getContext(\"2d\");\r\n    this.state.chart = new Chart(this.state.ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: filmlabel,\r\n        datasets: [\r\n          {\r\n            label: \"# of Votes\",\r\n            data: filmrating,\r\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n            borderColor: \"rgba(54, 162, 235, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                suggestedMax: 10,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }); // eslint-disable-line no-new\r\n  }\r\n\r\n  render() {\r\n    return <canvas ref={this.chartRef} />;\r\n  }\r\n}\r\nexport default Graph;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\table\\table.js",[],"C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js",["191"],"import React from \"react\";\r\nimport \"./actortable.css\";\r\n\r\nexport default (props) => (\r\n  <table className=\"aboutTable\">\r\n    {props.actors.profession ? (\r\n      <tr>\r\n        <th>Карьера</th>\r\n        <th>{props.actors.profession}</th>\r\n      </tr>\r\n    ) : null}\r\n    {props.actors.growth ? (\r\n      <tr>\r\n        <th>Рост</th>\r\n        <th>{props.actors.growth}</th>\r\n      </tr>\r\n    ) : null}\r\n    {props.actors.birthday ? (\r\n      <tr>\r\n        <th>Дата рождения</th>\r\n        <th>{props.actors.birthday}</th>\r\n      </tr>\r\n    ) : null}\r\n    {props.actors.birthplace ? (\r\n      <tr>\r\n        <th>Место рождения</th>\r\n        <th>{props.actors.birthplace}</th>\r\n      </tr>\r\n    ) : null}\r\n    {props.actors.films.length ? (\r\n      <tr>\r\n        <th>Всего фильмов</th>\r\n        <th>{props.actors.films.length}</th>\r\n      </tr>\r\n    ) : null}\r\n  </table>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js",["192"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./castElement.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"staffList\">\r\n    <p>{props.staff[0].professionText}</p>\r\n    <ol>\r\n      {props.staff.map((actor) => (\r\n        <li>\r\n          <div className=\"actor_list_table\">\r\n            <img\r\n              src={actor.posterUrl}\r\n              alt={actor.nameRu}\r\n              className=\"actor_table_img\"\r\n            ></img>\r\n            <div className=\"actor_table_name\">\r\n              <NavLink to={\"/name/\" + actor.staffId} exact>\r\n                <p>{actor.nameRu ? actor.nameRu : actor.nameEn}</p>\r\n              </NavLink>\r\n\r\n              <p>{actor.description}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js",["193"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { recomendationList } = steps;\r\n\r\n    this.state = { recomendationList };\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-filters?genre=${link}&order=RATING&type=FILM&ratingFrom=8&ratingTo=10&yearFrom=1888&yearTo=2020&page=1`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          let randomnum =\r\n            Math.floor(Math.random() * (result.films.length - 1 - 0 + 1)) + 0;\r\n          //console.log(randomnum);\r\n          this.setState({\r\n            isLoaded: true,\r\n            movielist: result,\r\n            randomnum: randomnum,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.state.recomendationList.value);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, movielist, randomnum } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      let movie = movielist.films[randomnum];\r\n      return (\r\n        <div className=\"staffList\">\r\n          <img\r\n            src={movie.posterUrl}\r\n            alt={movie.nameRu}\r\n            className=\"actor_table_img\"\r\n          ></img>\r\n          <NavLink to={\"/film/\" + movie.filmId} exact>\r\n            <p>{movie.nameRu}</p>\r\n          </NavLink>\r\n          <p>{movie.nameEn}</p>\r\n          <p>{movie.rating}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\search\\searchresult.js",["194","195"],"import React from \"react\";\r\nimport \"./searchresult.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"search-result-field\">\r\n    <img className=\"poster\" src={props.posterUrl}></img>\r\n    <div className=\"title\">\r\n      <h1>{props.nameRu}</h1>\r\n      <p>\r\n        {props.rating} {props.nameEn}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoiskmerge\\clone-wars-kinopoisk\\src\\footer\\footer.js",["196","197"],{"ruleId":"198","severity":1,"message":"199","line":16,"column":17,"nodeType":"200","messageId":"201","endLine":16,"endColumn":25},{"ruleId":"198","severity":1,"message":"202","line":16,"column":27,"nodeType":"200","messageId":"201","endLine":16,"endColumn":33},{"ruleId":"198","severity":1,"message":"203","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":12},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":79,"column":5,"nodeType":"210","messageId":"211","endLine":81,"endColumn":27},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":11,"endColumn":2},{"ruleId":"208","severity":1,"message":"209","line":68,"column":5,"nodeType":"210","messageId":"211","endLine":118,"endColumn":6},{"ruleId":"215","severity":1,"message":"216","line":76,"column":13,"nodeType":"217","endLine":76,"endColumn":98},{"ruleId":"215","severity":1,"message":"216","line":72,"column":11,"nodeType":"217","endLine":72,"endColumn":96},{"ruleId":"218","severity":1,"message":"219","line":6,"column":3,"nodeType":"220","messageId":"221","endLine":8,"endColumn":4},{"ruleId":"215","severity":1,"message":"216","line":58,"column":13,"nodeType":"217","endLine":58,"endColumn":82},{"ruleId":"212","severity":1,"message":"213","line":7,"column":1,"nodeType":"214","endLine":25,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":11,"column":7,"nodeType":"217","endLine":11,"endColumn":40},{"ruleId":"222","severity":1,"message":"223","line":150,"column":21,"nodeType":"224","messageId":"225","endLine":150,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":5,"column":3,"nodeType":"220","messageId":"221","endLine":7,"endColumn":4},{"ruleId":"198","severity":1,"message":"226","line":4,"column":16,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":119,"column":17,"nodeType":"210","messageId":"211","endLine":121,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":137,"column":17,"nodeType":"210","messageId":"211","endLine":139,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":157,"column":17,"nodeType":"210","messageId":"211","endLine":159,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":174,"column":17,"nodeType":"210","messageId":"211","endLine":176,"endColumn":18},{"ruleId":"198","severity":1,"message":"227","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":5,"column":3,"nodeType":"220","messageId":"221","endLine":7,"endColumn":4},{"ruleId":"212","severity":1,"message":"213","line":3,"column":1,"nodeType":"214","endLine":7,"endColumn":3},{"ruleId":"222","severity":1,"message":"223","line":51,"column":32,"nodeType":"224","messageId":"225","endLine":51,"endColumn":34},{"ruleId":"222","severity":1,"message":"228","line":65,"column":34,"nodeType":"224","messageId":"225","endLine":65,"endColumn":36},{"ruleId":"222","severity":1,"message":"228","line":69,"column":11,"nodeType":"224","messageId":"225","endLine":69,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":14,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","endLine":6,"endColumn":62},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":19,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","endLine":6,"endColumn":62},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":14,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","endLine":6,"endColumn":62},{"ruleId":"215","severity":1,"message":"216","line":57,"column":11,"nodeType":"217","endLine":57,"endColumn":96},{"ruleId":"198","severity":1,"message":"229","line":63,"column":11,"nodeType":"200","messageId":"201","endLine":63,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":83,"column":11,"nodeType":"217","endLine":83,"endColumn":96},{"ruleId":"230","severity":1,"message":"231","line":47,"column":5,"nodeType":"232","endLine":47,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":48,"column":5,"nodeType":"232","endLine":48,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":37,"endColumn":3},{"ruleId":"212","severity":1,"message":"213","line":5,"column":1,"nodeType":"214","endLine":29,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":59,"column":11,"nodeType":"217","endLine":59,"endColumn":96},{"ruleId":"212","severity":1,"message":"213","line":4,"column":1,"nodeType":"214","endLine":14,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","endLine":6,"endColumn":51},{"ruleId":"212","severity":1,"message":"213","line":5,"column":1,"nodeType":"214","endLine":18,"endColumn":3},{"ruleId":"215","severity":1,"message":"216","line":12,"column":7,"nodeType":"217","endLine":12,"endColumn":25},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Main' is defined but never used.","no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","'TopResult' is defined but never used.","Expected '===' and instead saw '=='.","'professions' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]