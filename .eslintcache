[{"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js":"1","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js":"2","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js":"4","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":3480,"mtime":1610898649590,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":314,"mtime":1610450824000,"results":"10","hashOfConfig":"7"},{"size":3873,"mtime":1611048390845,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hb3x96",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js",[],["25","26"],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js",["27","28","29","30","31","32"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport Car from './car/car'\nimport Actor from './actors/actor'\n\nclass App extends Component {\n  state = {\n    cars: [{name:'mazda', year: 1997}, {name:'audi', year: 1997}, {name:'ferrari', year: 1997}],\n    pageTitle: \"Title\",\n    showCars: false,\n    isLoaded: false,\n    error: null,\n    items:{},\n  }\n  clickHandler(prop) {\n    this.setState({\n      pageTitle: prop\n    })\n  }\n  toggleCars() {\n    this.setState({\n      showCars: !this.state.showCars\n    })\n  }\n  componentDidMount() {\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff/66539`, \n    {\n      method: 'GET',\n      headers: {\n        \"accept\": \"application/json\",\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\"\n      }\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const actors = this.state.items.actors\n          this.setState({\n            isLoaded: true,\n            actors: result\n          });\n          console.log(this.state);\n        },\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\n        (error) => {\n          console.log(\"error\");\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  render() {\n    const divStyle={\n      textAlign: 'center'\n    }\n    let cars=null\n    const {error, isLoaded, items} = this.state;\n    if(this.state.showCars) {\n      cars =\n          this.state.cars.map((car, index)=>{\n            return (\n              <Car\n                key={index}\n                name={car.name}\n                year={car.year}\n                handler={this.clickHandler.bind(this, car.name)}\n              />\n            )\n          })\n        \n      \n    } else \n    cars = null\n    return (\n    <div style={divStyle}>\n      {/* <h1>{this.state.pageTitle}</h1>\n      <button onClick={this.toggleCars.bind(this)}>toggle cars title</button> */}\n      <Actor>\n        \n      </Actor>\n      {/* <div style={{\n        width: '400',\n        margin: 'auto',\n        paddingTop: '20px',\n      }}>\n        {cars}\n      </div> */}\n      {/* {this.state.showCars ?\n      this.state.cars.map((car, index)=>{\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            handler={this.clickHandler.bind(this, car.name)}\n          />\n        )\n      }): null\n    } */}\n      {/* <Car name={cars[0].name} year={cars[0].year} handler={this.clickHandler.bind(this)}/>\n      <Car name={cars[1].name} year={cars[1].year} handler={this.clickHandler.bind(this)}/>\n      <Car name={cars[2].name} year={cars[2].year} handler={this.clickHandler.bind(this)}/> */}\n    </div>\n    )\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js",["33"],"import React from \"react\"\r\nimport './car.css'\r\n\r\nexport default (props) => (\r\n    <div className='Car'>\r\n        <h1>hello world</h1>\r\n        <p>Car name <strong>{props.name}</strong></p>\r\n        <p>Car year <strong>{props.year}</strong></p>\r\n        <button onClick={props.handler}>click</button>\r\n    </div>\r\n)","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":38,"column":17,"nodeType":"42","messageId":"43","endLine":38,"endColumn":23},{"ruleId":"40","severity":1,"message":"45","line":61,"column":12,"nodeType":"42","messageId":"43","endLine":61,"endColumn":17},{"ruleId":"40","severity":1,"message":"46","line":61,"column":19,"nodeType":"42","messageId":"43","endLine":61,"endColumn":27},{"ruleId":"40","severity":1,"message":"47","line":61,"column":29,"nodeType":"42","messageId":"43","endLine":61,"endColumn":34},{"ruleId":"40","severity":1,"message":"48","line":77,"column":5,"nodeType":"42","messageId":"43","endLine":77,"endColumn":9},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":11,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":46,"column":7,"nodeType":"54","messageId":"55","endLine":108,"endColumn":8},{"ruleId":"56","severity":1,"message":"57","line":52,"column":13,"nodeType":"58","endLine":52,"endColumn":97},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'actors' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'items' is assigned a value but never used.","'cars' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]