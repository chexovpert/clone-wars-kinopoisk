[{"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\index.js":"1","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\App.js":"2","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\films.js":"4","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actor.js":"5","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castPage.js":"6","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js":"7","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\casttable\\casttable.js":"8","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\factlist\\factlist.js":"9","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js":"10","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\graph\\graph.js":"11","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\table\\table.js":"12","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js":"13","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js":"14","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js":"15","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js":"16"},{"size":613,"mtime":1612018213513,"results":"17","hashOfConfig":"18"},{"size":1355,"mtime":1612035943545,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1612018203854,"results":"20","hashOfConfig":"18"},{"size":4724,"mtime":1612037408965,"results":"21","hashOfConfig":"18"},{"size":4610,"mtime":1612037655126,"results":"22","hashOfConfig":"18"},{"size":2634,"mtime":1612018213505,"results":"23","hashOfConfig":"18"},{"size":4321,"mtime":1612018213515,"results":"24","hashOfConfig":"18"},{"size":2196,"mtime":1612018213506,"results":"25","hashOfConfig":"18"},{"size":947,"mtime":1612018213508,"results":"26","hashOfConfig":"18"},{"size":6326,"mtime":1612018213511,"results":"27","hashOfConfig":"18"},{"size":1827,"mtime":1612018213512,"results":"28","hashOfConfig":"18"},{"size":1624,"mtime":1612018213516,"results":"29","hashOfConfig":"18"},{"size":740,"mtime":1612018213502,"results":"30","hashOfConfig":"18"},{"size":805,"mtime":1612018213504,"results":"31","hashOfConfig":"18"},{"size":2661,"mtime":1612018213514,"results":"32","hashOfConfig":"18"},{"size":1246,"mtime":1612038045920,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jwg6l",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\index.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\App.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\reportWebVitals.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\films.js",["69","70"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actor.js",["71"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castPage.js",["72"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\casttable\\casttable.js",["73"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      let actorArray = staff\r\n        .slice()\r\n        .filter((person) => person.professionKey === \"ACTOR\");\r\n      //console.log(actorArray);\r\n      actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          {actorArray.map((actor) => (\r\n            <NavLink to={\"/name/\" + actor.staffId} exact>\r\n              <p>{actor.nameRu}</p>\r\n            </NavLink>\r\n          ))}\r\n          <NavLink to={\"/film/\" + this.props.id + \"/staff\"} exact>\r\n            Все актеры\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n",["74","75"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\factlist\\factlist.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js",["76","77"],"import React from \"react\";\r\nimport \"./filmtable.css\";\r\n\r\nclass FilmTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update if not match I don't know what's your data is so add a\r\n    // simple check like we use for strings.\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    //console.log(this.props.film);\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      // const staffarray = professions.map((elem) =>\r\n      //   staff.slice().filter((person) => person.professionKey === elem)\r\n      // );\r\n      // return staffarray.map((profession) =>\r\n      //   profession.length ? <div className={profession}></div> : null\r\n      // );\r\n      return (\r\n        <table className=\"aboutTable\">\r\n          <tr>\r\n            <th>Год производства</th>\r\n            <th>{this.props.film.year}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Страна</th>\r\n            <th>\r\n              {this.props.film.countries.map((country) => (\r\n                <p>{country.country}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Жанр</th>\r\n            <th>\r\n              {this.props.film.genres.map((genre) => (\r\n                <p>{genre.genre}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Слоган</th>\r\n            <th>{this.props.film.slogan}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Режиссер</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DIRECTOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сценарист</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"WRITER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Оператор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"OPERATOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Композитор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"COMPOSER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Художник</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DESIGN\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Бюджет</th>\r\n            <th>${this.props.film.budget}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в США</th>\r\n            <th>${this.props.film.grossUsa}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в мире</th>\r\n            <th>${this.props.film.grossWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Премьера в мире</th>\r\n            <th>${this.props.film.premiereWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Возраст</th>\r\n            <th>${this.props.film.ratingAgeLimits}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Время</th>\r\n            <th>${this.props.film.filmLength}</th>\r\n          </tr>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default FilmTable;\r\n//export default (props) => (\r\n//   <table className=\"aboutTable\">\r\n//     <tr>\r\n//       <th>Карьера</th>\r\n//       <th>{props.actors.profession}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Рост</th>\r\n//       <th>{props.actors.growth} см</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Дата рождения</th>\r\n//       <th>\r\n//         {props.actors.birthday}, {props.actors.age} лет\r\n//       </th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Место рождения</th>\r\n//       <th>{props.actors.birthplace}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Жанры</th> <th></th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Всего фильмов</th>\r\n//       <th>{props.actors.films.length}</th>\r\n//     </tr>\r\n//   </table>\r\n// );\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\graph\\graph.js",["78","79"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\table\\table.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js",["80"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js",["81"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js",["82"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js",["83","84"],{"ruleId":"85","severity":1,"message":"86","line":66,"column":5,"nodeType":"87","messageId":"88","endLine":143,"endColumn":6},{"ruleId":"89","severity":1,"message":"90","line":74,"column":13,"nodeType":"91","endLine":74,"endColumn":98},{"ruleId":"85","severity":1,"message":"86","line":78,"column":5,"nodeType":"87","messageId":"88","endLine":148,"endColumn":6},{"ruleId":"89","severity":1,"message":"90","line":77,"column":11,"nodeType":"91","endLine":77,"endColumn":96},{"ruleId":"89","severity":1,"message":"90","line":58,"column":11,"nodeType":"91","endLine":58,"endColumn":96},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":58,"column":11,"nodeType":"98","messageId":"99","endLine":58,"endColumn":22},{"ruleId":"89","severity":1,"message":"90","line":79,"column":11,"nodeType":"91","endLine":79,"endColumn":96},{"ruleId":"100","severity":1,"message":"101","line":45,"column":5,"nodeType":"102","endLine":45,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":46,"column":5,"nodeType":"102","endLine":46,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":4,"column":1,"nodeType":"105","endLine":32,"endColumn":3},{"ruleId":"103","severity":1,"message":"104","line":5,"column":1,"nodeType":"105","endLine":29,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":65,"column":11,"nodeType":"91","endLine":65,"endColumn":96},{"ruleId":"106","severity":1,"message":"107","line":5,"column":5,"nodeType":"108","messageId":"109","endLine":7,"endColumn":6},{"ruleId":"100","severity":1,"message":"101","line":23,"column":15,"nodeType":"102","endLine":23,"endColumn":33},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'professions' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]