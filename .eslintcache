[{"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\index.js":"1","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\App.js":"2","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\films.js":"4","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actor.js":"5","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castPage.js":"6","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js":"7","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\casttable\\casttable.js":"8","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\factlist\\factlist.js":"9","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js":"10","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\graph\\graph.js":"11","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\table\\table.js":"12","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js":"13","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js":"14","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js":"15","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js":"16","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\scrollbutton\\scrollbutton.js":"17"},{"size":613,"mtime":1612018213513,"results":"18","hashOfConfig":"19"},{"size":1443,"mtime":1612085261342,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612018203854,"results":"21","hashOfConfig":"19"},{"size":3792,"mtime":1612081395591,"results":"22","hashOfConfig":"19"},{"size":4716,"mtime":1612081074161,"results":"23","hashOfConfig":"19"},{"size":2634,"mtime":1612018213505,"results":"24","hashOfConfig":"19"},{"size":4710,"mtime":1612079087174,"results":"25","hashOfConfig":"19"},{"size":2196,"mtime":1612018213506,"results":"26","hashOfConfig":"19"},{"size":947,"mtime":1612018213508,"results":"27","hashOfConfig":"19"},{"size":6326,"mtime":1612018213511,"results":"28","hashOfConfig":"19"},{"size":1827,"mtime":1612018213512,"results":"29","hashOfConfig":"19"},{"size":1624,"mtime":1612018213516,"results":"30","hashOfConfig":"19"},{"size":740,"mtime":1612018213502,"results":"31","hashOfConfig":"19"},{"size":805,"mtime":1612018213504,"results":"32","hashOfConfig":"19"},{"size":2661,"mtime":1612018213514,"results":"33","hashOfConfig":"19"},{"size":1412,"mtime":1612079546496,"results":"34","hashOfConfig":"19"},{"size":1107,"mtime":1612087828274,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19jwg6l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\index.js",[],["78","79"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\App.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\reportWebVitals.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\films.js",["80","81"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actor.js",["82"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castPage.js",["83"],"import React from \"react\";\r\nimport CastElement from \"./castElement/castElement\";\r\nclass CastPage extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update if not match I don't know what's your data is so add a\r\n    // simple check like we use for strings.\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      const staffarray = professions.map((elem) =>\r\n        staff.slice().filter((person) => person.professionKey === elem)\r\n      );\r\n      return staffarray.map((profession) =>\r\n        profession.length ? (\r\n          <CastElement staff={profession}></CastElement>\r\n        ) : null\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastPage;\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\moviebot.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\casttable\\casttable.js",["84"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      let actorArray = staff\r\n        .slice()\r\n        .filter((person) => person.professionKey === \"ACTOR\");\r\n      //console.log(actorArray);\r\n      actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          {actorArray.map((actor) => (\r\n            <NavLink to={\"/name/\" + actor.staffId} exact>\r\n              <p>{actor.nameRu}</p>\r\n            </NavLink>\r\n          ))}\r\n          <NavLink to={\"/film/\" + this.props.id + \"/staff\"} exact>\r\n            Все актеры\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\factlist\\factlist.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\films\\filmtable\\filmtable.js",["85","86"],"import React from \"react\";\r\nimport \"./filmtable.css\";\r\n\r\nclass FilmTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update if not match I don't know what's your data is so add a\r\n    // simple check like we use for strings.\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    //console.log(this.props.film);\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      // const staffarray = professions.map((elem) =>\r\n      //   staff.slice().filter((person) => person.professionKey === elem)\r\n      // );\r\n      // return staffarray.map((profession) =>\r\n      //   profession.length ? <div className={profession}></div> : null\r\n      // );\r\n      return (\r\n        <table className=\"aboutTable\">\r\n          <tr>\r\n            <th>Год производства</th>\r\n            <th>{this.props.film.year}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Страна</th>\r\n            <th>\r\n              {this.props.film.countries.map((country) => (\r\n                <p>{country.country}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Жанр</th>\r\n            <th>\r\n              {this.props.film.genres.map((genre) => (\r\n                <p>{genre.genre}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Слоган</th>\r\n            <th>{this.props.film.slogan}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Режиссер</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DIRECTOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сценарист</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"WRITER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Оператор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"OPERATOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Композитор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"COMPOSER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Художник</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DESIGN\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Бюджет</th>\r\n            <th>${this.props.film.budget}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в США</th>\r\n            <th>${this.props.film.grossUsa}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в мире</th>\r\n            <th>${this.props.film.grossWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Премьера в мире</th>\r\n            <th>${this.props.film.premiereWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Возраст</th>\r\n            <th>${this.props.film.ratingAgeLimits}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Время</th>\r\n            <th>${this.props.film.filmLength}</th>\r\n          </tr>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default FilmTable;\r\n//export default (props) => (\r\n//   <table className=\"aboutTable\">\r\n//     <tr>\r\n//       <th>Карьера</th>\r\n//       <th>{props.actors.profession}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Рост</th>\r\n//       <th>{props.actors.growth} см</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Дата рождения</th>\r\n//       <th>\r\n//         {props.actors.birthday}, {props.actors.age} лет\r\n//       </th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Место рождения</th>\r\n//       <th>{props.actors.birthplace}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Жанры</th> <th></th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Всего фильмов</th>\r\n//       <th>{props.actors.films.length}</th>\r\n//     </tr>\r\n//   </table>\r\n// );\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\graph\\graph.js",["87","88"],"import React from \"react\";\r\nimport \"./graph.css\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    actor: null,\r\n    role: null,\r\n    chart: null,\r\n    ctx: null,\r\n    //   isLoaded: false,\r\n    //   error: null,\r\n    //   listToggle: false,\r\n    //   role: \"HIMSELF\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.state.chart.destroy();\r\n    this.buildChart();\r\n  }\r\n  buildChart() {\r\n    let actor = this.props.actor;\r\n    let role = this.props.role;\r\n\r\n    let filmtype = actor.films.filter((film) =>\r\n      film.professionKey === role ? film : null\r\n    );\r\n    let filmlabel = filmtype.map((film) => film.nameEn);\r\n    let filmrating = filmtype.map((film) =>\r\n      film.rating.includes(\"%\")\r\n        ? film.rating.substring(0, film.rating.length - 1) / 10\r\n        : film.rating\r\n    );\r\n\r\n    //console.log(filmtype);\r\n    this.state.ctx = this.chartRef.current.getContext(\"2d\");\r\n    this.state.chart = new Chart(this.state.ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: filmlabel,\r\n        datasets: [\r\n          {\r\n            label: \"# of Votes\",\r\n            data: filmrating,\r\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n            borderColor: \"rgba(54, 162, 235, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                suggestedMax: 10,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }); // eslint-disable-line no-new\r\n  }\r\n\r\n  render() {\r\n    return <canvas ref={this.chartRef} />;\r\n  }\r\n}\r\nexport default Graph;\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\table\\table.js",[],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\actors\\actortable\\actortable.js",["89"],"import React from \"react\";\r\nimport \"./actortable.css\";\r\n\r\nexport default (props) => (\r\n  <table className=\"aboutTable\">\r\n    <tr>\r\n      <th>Карьера</th>\r\n      <th>{props.actors.profession}</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Рост</th>\r\n      <th>{props.actors.growth} см</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Дата рождения</th>\r\n      <th>\r\n        {props.actors.birthday}, {props.actors.age} лет\r\n      </th>\r\n    </tr>\r\n    <tr>\r\n      <th>Место рождения</th>\r\n      <th>{props.actors.birthplace}</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Жанры</th> <th></th>\r\n    </tr>\r\n    <tr>\r\n      <th>Всего фильмов</th>\r\n      <th>{props.actors.films.length}</th>\r\n    </tr>\r\n  </table>\r\n);\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\castPage\\castElement\\castElement.js",["90"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./castElement.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"staffList\">\r\n    <p>{props.staff[0].professionText}</p>\r\n    <ol>\r\n      {props.staff.map((actor) => (\r\n        <li>\r\n          <div className=\"actor_list_table\">\r\n            <img\r\n              src={actor.posterUrl}\r\n              alt={actor.nameRu}\r\n              className=\"actor_table_img\"\r\n            ></img>\r\n            <div className=\"actor_table_name\">\r\n              <NavLink to={\"/name/\" + actor.staffId} exact>\r\n                <p>{actor.nameRu ? actor.nameRu : actor.nameEn}</p>\r\n              </NavLink>\r\n\r\n              <p>{actor.description}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  </div>\r\n);\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js",["91"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { recomendationList } = steps;\r\n\r\n    this.state = { recomendationList };\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-filters?genre=${link}&order=RATING&type=FILM&ratingFrom=8&ratingTo=10&yearFrom=1888&yearTo=2020&page=1`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movielist: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  //   componentDidUpdate(prevProps, prevState) {\r\n  //     if (prevState.id !== this.state.recomendationList.value) {\r\n  //       this.setState({\r\n  //         isLoaded: false,\r\n  //         error: null,\r\n  //       });\r\n  //       this.apiHandler(this.state.recomendationList.value);\r\n  //     }\r\n  //   }\r\n  componentDidMount() {\r\n    this.apiHandler(this.state.recomendationList.value);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, movielist } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      //console.log(movielist);\r\n\r\n      let randomnum =\r\n        Math.floor(Math.random() * (movielist.films.length - 1 - 0 + 1)) + 0;\r\n      let movie = movielist.films[randomnum];\r\n      console.log(movie);\r\n      //actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          <img\r\n            src={movie.posterUrl}\r\n            alt={movie.nameRu}\r\n            className=\"actor_table_img\"\r\n          ></img>\r\n          <NavLink to={\"/film/\" + movie.filmId} exact>\r\n            <p>{movie.nameRu}</p>\r\n          </NavLink>\r\n          <p>{movie.nameEn}</p>\r\n          <p>{movie.rating}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n","C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\pagestory\\pagestory.js",["92","93"],"C:\\Users\\Pavel\\Desktop\\kinopoisk-dev\\clone-wars-kinopoisk\\src\\scrollbutton\\scrollbutton.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":67,"column":5,"nodeType":"100","messageId":"101","endLine":117,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":75,"column":13,"nodeType":"104","endLine":75,"endColumn":98},{"ruleId":"98","severity":1,"message":"99","line":79,"column":5,"nodeType":"100","messageId":"101","endLine":149,"endColumn":6},{"ruleId":"102","severity":1,"message":"103","line":77,"column":11,"nodeType":"104","endLine":77,"endColumn":96},{"ruleId":"102","severity":1,"message":"103","line":58,"column":11,"nodeType":"104","endLine":58,"endColumn":96},{"ruleId":"105","severity":1,"message":"106","line":58,"column":11,"nodeType":"107","messageId":"108","endLine":58,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":79,"column":11,"nodeType":"104","endLine":79,"endColumn":96},{"ruleId":"109","severity":1,"message":"110","line":45,"column":5,"nodeType":"111","endLine":45,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":46,"column":5,"nodeType":"111","endLine":46,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":4,"column":1,"nodeType":"114","endLine":32,"endColumn":3},{"ruleId":"112","severity":1,"message":"113","line":5,"column":1,"nodeType":"114","endLine":29,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":65,"column":11,"nodeType":"104","endLine":65,"endColumn":96},{"ruleId":"115","severity":1,"message":"116","line":6,"column":5,"nodeType":"117","messageId":"118","endLine":8,"endColumn":6},{"ruleId":"109","severity":1,"message":"110","line":24,"column":15,"nodeType":"111","endLine":24,"endColumn":33},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'professions' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]