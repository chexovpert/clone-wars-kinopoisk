[{"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js":"1","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js":"2","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js":"4","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":3487,"mtime":1611070075344,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":314,"mtime":1610450824000,"results":"10","hashOfConfig":"7"},{"size":6599,"mtime":1611072705844,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hb3x96",{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js",[],["26","27"],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js",["28","29","30","31","32"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Car from \"./car/car\";\nimport Actor from \"./actors/actor\";\n\nclass App extends Component {\n  state = {\n    cars: [\n      { name: \"mazda\", year: 1997 },\n      { name: \"audi\", year: 1997 },\n      { name: \"ferrari\", year: 1997 },\n    ],\n    pageTitle: \"Title\",\n    showCars: false,\n    isLoaded: false,\n    error: null,\n    items: {},\n  };\n  clickHandler(prop) {\n    this.setState({\n      pageTitle: prop,\n    });\n  }\n  toggleCars() {\n    this.setState({\n      showCars: !this.state.showCars,\n    });\n  }\n  /*componentDidMount() {\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff/66539`, {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const actors = this.state.items.actors;\n          this.setState({\n            isLoaded: true,\n            actors: result,\n          });\n          console.log(this.state);\n        },\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\n        (error) => {\n          console.log(\"error\");\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }*/\n  render() {\n    const divStyle = {\n      textAlign: \"center\",\n    };\n    let cars = null;\n    const { error, isLoaded, items } = this.state;\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            handler={this.clickHandler.bind(this, car.name)}\n          />\n        );\n      });\n    } else cars = null;\n    return (\n      <div style={divStyle}>\n        {/* <h1>{this.state.pageTitle}</h1>\n      <button onClick={this.toggleCars.bind(this)}>toggle cars title</button> */}\n        <Actor id=\"37859\"></Actor>\n        {/* <div style={{\n        width: '400',\n        margin: 'auto',\n        paddingTop: '20px',\n      }}>\n        {cars}\n      </div> */}\n        {/* {this.state.showCars ?\n      this.state.cars.map((car, index)=>{\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            handler={this.clickHandler.bind(this, car.name)}\n          />\n        )\n      }): null\n    } */}\n        {/* <Car name={cars[0].name} year={cars[0].year} handler={this.clickHandler.bind(this)}/>\n      <Car name={cars[1].name} year={cars[1].year} handler={this.clickHandler.bind(this)}/>\n      <Car name={cars[2].name} year={cars[2].year} handler={this.clickHandler.bind(this)}/> */}\n      </div>\n    );\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js",["33"],"import React from \"react\"\r\nimport './car.css'\r\n\r\nexport default (props) => (\r\n    <div className='Car'>\r\n        <h1>hello world</h1>\r\n        <p>Car name <strong>{props.name}</strong></p>\r\n        <p>Car year <strong>{props.year}</strong></p>\r\n        <button onClick={props.handler}>click</button>\r\n    </div>\r\n)","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js",["34","35"],"import React from \"react\";\r\nimport \"./actor.css\";\r\nclass Actor extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n\r\n  state = {\r\n    actor: null,\r\n    isLoaded: false,\r\n    error: null,\r\n    listToggle: false,\r\n    role: \"HIMSELF\",\r\n  };\r\n  componentDidMount() {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff/${this.props.id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          //const actors = this.state.items.actor\r\n          this.setState({\r\n            isLoaded: true,\r\n            actors: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  roleHandler(prop) {\r\n    this.setState({\r\n      role: prop,\r\n    });\r\n  }\r\n  toggleList() {\r\n    this.setState({\r\n      listClass: \"show\",\r\n      listToggle: !this.state.listToggle,\r\n    });\r\n  }\r\n  render() {\r\n    {\r\n      const { error, isLoaded, actors } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n          <div>\r\n            Загрузка...\r\n            <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"actorWrap\">\r\n            <div className=\"actorTop\">\r\n              <div className=\"firstColumn\">\r\n                <div className=\"actorPic\">\r\n                  <img src={actors.posterUrl} alt=\"actorname\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"secondColumn\">\r\n                <div className=\"description\">\r\n                  <div className=\"actorName\">\r\n                    <h1>{actors.nameRu}</h1>\r\n                    <h2>{actors.nameEn}</h2>\r\n                    <h2>О персоне</h2>\r\n                  </div>\r\n                  <table className=\"aboutTable\">\r\n                    <tr>\r\n                      <th>Карьера</th>\r\n                      <th>{actors.profession}</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Рост</th>\r\n                      <th>{actors.growth} см</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Дата рождения</th>\r\n                      <th>\r\n                        {actors.birthday}, {actors.age} лет\r\n                      </th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Место рождения</th>\r\n                      <th>{actors.birthplace}</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Жанры</th> <th></th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Всего фильмов</th>\r\n                      <th>{actors.films.length}</th>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div className=\"thirdColumn\">\r\n                <p>\r\n                  <b>Лучшие фильмы</b>\r\n                </p>\r\n                {this.state.actors.films.map((film) =>\r\n                  film.general ? <p>{film.nameRu}</p> : null\r\n                )}\r\n                {actors.hasAwards ? (\r\n                  <div>\r\n                    <img\r\n                      src=\"https://st.kp.yandex.net/images/movies/awardOscar.png\"\r\n                      alt=\"actorname\"\r\n                    />\r\n                    <p>{actors.hasAwards}</p>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"actorBottom\">\r\n              <ul style={{ listStyleType: \"square\" }} class=\"factlist\">\r\n                {this.state.actors.facts.length ? (\r\n                  <h2>Знаете ли вы, что…</h2>\r\n                ) : null}\r\n                {this.state.actors.facts.map((fact) =>\r\n                  this.state.actors.facts.length ? (\r\n                    <li className={this.state.listToggle ? \"show\" : \"\"}>\r\n                      {fact}\r\n                    </li>\r\n                  ) : null\r\n                )}\r\n                {this.state.actors.facts.length >= 3 ? (\r\n                  <div\r\n                    className=\"show_hide_list\"\r\n                    onClick={this.toggleList.bind(this)}\r\n                  >\r\n                    {this.state.listToggle ? \"Скрыть\" : \"Смотреть все\"}\r\n                  </div>\r\n                ) : null}\r\n              </ul>\r\n              <div className=\"movieList\">\r\n                <ol className=\"listt\">\r\n                  <div class=\"scrollmenu\">\r\n                    <div onClick={this.roleHandler.bind(this, \"ACTOR\")}>\r\n                      Актер\r\n                    </div>\r\n                    <div onClick={this.roleHandler.bind(this, \"PRODUCER\")}>\r\n                      Продюсер\r\n                    </div>\r\n                    <div onClick={this.roleHandler.bind(this, \"HIMSELF\")}>\r\n                      Актер: играет самого себя\r\n                    </div>\r\n                    <div onClick={this.roleHandler.bind(this, \"WRITER\")}>\r\n                      Сценарист\r\n                    </div>\r\n                  </div>\r\n                  {this.state.actors.films.map((film) =>\r\n                    film.professionKey === this.state.role ? (\r\n                      <ol className=\"film_list_table\">\r\n                        <div className=\"film_table_name\">\r\n                          <h3>{film.nameEn}</h3>\r\n                          <p>{film.nameRu}</p>\r\n                          <p>{film.description}</p>\r\n                        </div>\r\n                        <div className=\"film_rating\">{film.rating}</div>\r\n                      </ol>\r\n                    ) : null\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Actor;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"44","line":64,"column":13,"nodeType":"42","messageId":"43","endLine":64,"endColumn":18},{"ruleId":"40","severity":1,"message":"45","line":64,"column":20,"nodeType":"42","messageId":"43","endLine":64,"endColumn":28},{"ruleId":"40","severity":1,"message":"46","line":64,"column":30,"nodeType":"42","messageId":"43","endLine":64,"endColumn":35},{"ruleId":"40","severity":1,"message":"47","line":76,"column":12,"nodeType":"42","messageId":"43","endLine":76,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":11,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":57,"column":5,"nodeType":"53","messageId":"54","endLine":186,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":65,"column":13,"nodeType":"57","endLine":65,"endColumn":98},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'items' is assigned a value but never used.","'cars' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]