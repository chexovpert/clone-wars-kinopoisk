[{"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js":"1","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js":"2","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js":"3","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js":"4","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js":"5","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\graph\\graph.js":"6","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\table\\table.js":"7","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\factlist\\factlist.js":"8","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\films\\films.js":"9","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\casttable\\casttable.js":"10","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\castPage\\castPage.js":"11","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\castPage\\castElement\\castElement.js":"12","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actortable\\actortable.js":"13","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\films\\filmtable\\filmtable.js":"14","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\moviebot\\moviebot.js":"15","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js":"16"},{"size":613,"mtime":1611515132337,"results":"17","hashOfConfig":"18"},{"size":1175,"mtime":1611775128035,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":314,"mtime":1610450824000,"results":"21","hashOfConfig":"18"},{"size":4069,"mtime":1611515132321,"results":"22","hashOfConfig":"18"},{"size":1827,"mtime":1611595564515,"results":"23","hashOfConfig":"18"},{"size":1624,"mtime":1611515132339,"results":"24","hashOfConfig":"18"},{"size":947,"mtime":1611515132329,"results":"25","hashOfConfig":"18"},{"size":4170,"mtime":1611600483220,"results":"26","hashOfConfig":"18"},{"size":2196,"mtime":1611600805712,"results":"27","hashOfConfig":"18"},{"size":2634,"mtime":1611515132326,"results":"28","hashOfConfig":"18"},{"size":805,"mtime":1611597173668,"results":"29","hashOfConfig":"18"},{"size":740,"mtime":1611515132323,"results":"30","hashOfConfig":"18"},{"size":6326,"mtime":1611601032214,"results":"31","hashOfConfig":"18"},{"size":4321,"mtime":1611780630780,"results":"32","hashOfConfig":"18"},{"size":2661,"mtime":1611779212300,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hb3x96",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"36"},"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\index.js",[],["78","79"],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\App.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\reportWebVitals.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\car\\car.js",["80"],"import React from \"react\"\r\nimport './car.css'\r\n\r\nexport default (props) => (\r\n    <div className='Car'>\r\n        <h1>hello world</h1>\r\n        <p>Car name <strong>{props.name}</strong></p>\r\n        <p>Car year <strong>{props.year}</strong></p>\r\n        <button onClick={props.handler}>click</button>\r\n    </div>\r\n)",["81","82"],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actor.js",["83"],"import React from \"react\";\r\nimport \"./actor.css\";\r\nimport Graph from \"../graph/graph\";\r\nimport Table from \"../table/table\";\r\nimport Factlist from \"../factlist/factlist\";\r\nimport ActorTable from \"./actortable/actortable\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Actor extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  state = {\r\n    actors: null,\r\n    isLoaded: false,\r\n    error: null,\r\n    role: \"ACTOR\",\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff/${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            actors: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n  }\r\n  roleHandler(prop) {\r\n    this.setState({\r\n      role: prop,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    {\r\n      const { error, isLoaded, actors } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n          <div>\r\n            Загрузка...\r\n            <img\r\n              alt=\"loadinggif\"\r\n              src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\"\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"actorWrap\">\r\n            <h2>{this.props.match.params.id}</h2>\r\n            <div className=\"actorTop\">\r\n              <div className=\"firstColumn\">\r\n                <div className=\"actorPic\">\r\n                  <img src={actors.posterUrl} alt=\"actorname\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"secondColumn\">\r\n                <div className=\"description\">\r\n                  <div className=\"actorName\">\r\n                    <h1>{actors.nameRu}</h1>\r\n                    <h2>{actors.nameEn}</h2>\r\n                    <h2>О персоне</h2>\r\n                  </div>\r\n                  <ActorTable actors={actors}></ActorTable>\r\n                </div>\r\n              </div>\r\n              <div className=\"thirdColumn\">\r\n                <p>\r\n                  <b>Лучшие фильмы</b>\r\n                </p>\r\n                {this.state.actors.films.map((film) =>\r\n                  film.general ? (\r\n                    <div>\r\n                      <NavLink to={\"/film/\" + film.filmId} exact>\r\n                        <p>{film.nameRu}</p>\r\n                      </NavLink>\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n                {actors.hasAwards ? (\r\n                  <div>\r\n                    <img\r\n                      src=\"https://st.kp.yandex.net/images/movies/awardOscar.png\"\r\n                      alt=\"actorname\"\r\n                    />\r\n                    <p>{actors.hasAwards}</p>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"actorBottom\">\r\n              <Factlist facts={this.state.actors.facts}></Factlist>\r\n              <Graph actor={this.state.actors} role={this.state.role}></Graph>\r\n              <Table\r\n                actors={this.state.actors}\r\n                role={this.state.role}\r\n                handler={this.roleHandler.bind(this)}\r\n              ></Table>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Actor;\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\graph\\graph.js",["84","85"],"import React from \"react\";\r\nimport \"./graph.css\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    actor: null,\r\n    role: null,\r\n    chart: null,\r\n    ctx: null,\r\n    //   isLoaded: false,\r\n    //   error: null,\r\n    //   listToggle: false,\r\n    //   role: \"HIMSELF\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.buildChart();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.state.chart.destroy();\r\n    this.buildChart();\r\n  }\r\n  buildChart() {\r\n    let actor = this.props.actor;\r\n    let role = this.props.role;\r\n\r\n    let filmtype = actor.films.filter((film) =>\r\n      film.professionKey === role ? film : null\r\n    );\r\n    let filmlabel = filmtype.map((film) => film.nameEn);\r\n    let filmrating = filmtype.map((film) =>\r\n      film.rating.includes(\"%\")\r\n        ? film.rating.substring(0, film.rating.length - 1) / 10\r\n        : film.rating\r\n    );\r\n\r\n    //console.log(filmtype);\r\n    this.state.ctx = this.chartRef.current.getContext(\"2d\");\r\n    this.state.chart = new Chart(this.state.ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: filmlabel,\r\n        datasets: [\r\n          {\r\n            label: \"# of Votes\",\r\n            data: filmrating,\r\n            backgroundColor: \"rgba(54, 162, 235, 0.2)\",\r\n            borderColor: \"rgba(54, 162, 235, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                suggestedMax: 10,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    }); // eslint-disable-line no-new\r\n  }\r\n\r\n  render() {\r\n    return <canvas ref={this.chartRef} />;\r\n  }\r\n}\r\nexport default Graph;\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\table\\table.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\factlist\\factlist.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\films\\films.js",["86","87"],"import React, { Component } from \"react\";\r\nimport \"./films.css\";\r\nimport Factlist from \"../factlist/factlist\";\r\nimport CastTable from \"../casttable/casttable\";\r\nimport FilmTable from \"./filmtable/filmtable\";\r\nclass Films extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v2.1/films/${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            films: result.data,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n  }\r\n  render() {\r\n    {\r\n      const { error, isLoaded, films } = this.state;\r\n      if (error) {\r\n        return <div>Ошибка: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n          <div>\r\n            Загрузка...\r\n            <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"filmWrap\">\r\n            <h2>{this.props.match.params.id}</h2>\r\n            <div className=\"filmTop\">\r\n              <div className=\"firstColumn\">\r\n                <div className=\"filmPic\">\r\n                  <img src={films.posterUrl} alt=\"filmname\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"secondColumn\">\r\n                <div className=\"description\">\r\n                  <div className=\"actorName\">\r\n                    <h1>{films.nameRu}</h1>\r\n                    <h2>{films.nameEn}</h2>\r\n                    <h2>О фильме</h2>\r\n                  </div>\r\n                  <FilmTable\r\n                    film={films}\r\n                    id={this.props.match.params.id}\r\n                  ></FilmTable>\r\n                  {/* <table className=\"aboutTable\">\r\n                    <tr>\r\n                      <th>Карьера</th>\r\n                      <th>{actors.profession}</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Рост</th>\r\n                      <th>{actors.growth} см</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Дата рождения</th>\r\n                      <th>\r\n                        {actors.birthday}, {actors.age} лет\r\n                      </th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Место рождения</th>\r\n                      <th>{actors.birthplace}</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Жанры</th> <th></th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Всего фильмов</th>\r\n                      <th>{actors.films.length}</th>\r\n                    </tr>\r\n                  </table> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"thirdColumn\">\r\n                <p>\r\n                  <b>В главных ролях</b>\r\n                </p>\r\n                <CastTable id={this.props.match.params.id}></CastTable>\r\n              </div>\r\n            </div>\r\n            <div className=\"filmBottom\">\r\n              <div className=\"filmDescription\">\r\n                <p>{films.description}</p>\r\n              </div>\r\n              <Factlist facts={this.state.films.facts}></Factlist>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default Films;\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\casttable\\casttable.js",["88"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      let actorArray = staff\r\n        .slice()\r\n        .filter((person) => person.professionKey === \"ACTOR\");\r\n      //console.log(actorArray);\r\n      actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          {actorArray.map((actor) => (\r\n            <NavLink to={\"/name/\" + actor.staffId} exact>\r\n              <p>{actor.nameRu}</p>\r\n            </NavLink>\r\n          ))}\r\n          <NavLink to={\"/film/\" + this.props.id + \"/staff\"} exact>\r\n            Все актеры\r\n          </NavLink>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\castPage\\castPage.js",["89"],"import React from \"react\";\r\nimport CastElement from \"./castElement/castElement\";\r\nclass CastPage extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update if not match I don't know what's your data is so add a\r\n    // simple check like we use for strings.\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.match.params.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.match.params.id);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      const staffarray = professions.map((elem) =>\r\n        staff.slice().filter((person) => person.professionKey === elem)\r\n      );\r\n      return staffarray.map((profession) =>\r\n        profession.length ? (\r\n          <CastElement staff={profession}></CastElement>\r\n        ) : null\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastPage;\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\castPage\\castElement\\castElement.js",["90"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./castElement.css\";\r\n\r\nexport default (props) => (\r\n  <div className=\"staffList\">\r\n    <p>{props.staff[0].professionText}</p>\r\n    <ol>\r\n      {props.staff.map((actor) => (\r\n        <li>\r\n          <div className=\"actor_list_table\">\r\n            <img\r\n              src={actor.posterUrl}\r\n              alt={actor.nameRu}\r\n              className=\"actor_table_img\"\r\n            ></img>\r\n            <div className=\"actor_table_name\">\r\n              <NavLink to={\"/name/\" + actor.staffId} exact>\r\n                <p>{actor.nameRu ? actor.nameRu : actor.nameEn}</p>\r\n              </NavLink>\r\n\r\n              <p>{actor.description}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  </div>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\actors\\actortable\\actortable.js",["91"],"import React from \"react\";\r\nimport \"./actortable.css\";\r\n\r\nexport default (props) => (\r\n  <table className=\"aboutTable\">\r\n    <tr>\r\n      <th>Карьера</th>\r\n      <th>{props.actors.profession}</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Рост</th>\r\n      <th>{props.actors.growth} см</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Дата рождения</th>\r\n      <th>\r\n        {props.actors.birthday}, {props.actors.age} лет\r\n      </th>\r\n    </tr>\r\n    <tr>\r\n      <th>Место рождения</th>\r\n      <th>{props.actors.birthplace}</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Жанры</th> <th></th>\r\n    </tr>\r\n    <tr>\r\n      <th>Всего фильмов</th>\r\n      <th>{props.actors.films.length}</th>\r\n    </tr>\r\n  </table>\r\n);\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\films\\filmtable\\filmtable.js",["92","93"],"import React from \"react\";\r\nimport \"./filmtable.css\";\r\n\r\nclass FilmTable extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    //this.id = props;\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(`https://kinopoiskapiunofficial.tech/api/v1/staff?filmId=${link}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        accept: \"application/json\",\r\n        \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            staff: result,\r\n          });\r\n          console.log(this.state);\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // only update if not match I don't know what's your data is so add a\r\n    // simple check like we use for strings.\r\n    if (prevProps.id !== this.props.id) {\r\n      this.setState({\r\n        isLoaded: false,\r\n        error: null,\r\n      });\r\n      this.apiHandler(this.props.id);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.apiHandler(this.props.id);\r\n    console.log(this.state);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, staff } = this.state;\r\n    const professions = [\r\n      \"DIRECTOR\",\r\n      \"ACTOR\",\r\n      \"PRODUCER\",\r\n      \"WRITER\",\r\n      \"OPERATOR\",\r\n      \"EDITOR\",\r\n      \"COMPOSER\",\r\n      \"DESIGN\",\r\n      \"PRODUCER_USSR\",\r\n      \"TRANSLATOR\",\r\n      \"VOICE_DIRECTOR\",\r\n      \"UNKNOWN\",\r\n    ];\r\n    //console.log(this.props.film);\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      // const staffarray = professions.map((elem) =>\r\n      //   staff.slice().filter((person) => person.professionKey === elem)\r\n      // );\r\n      // return staffarray.map((profession) =>\r\n      //   profession.length ? <div className={profession}></div> : null\r\n      // );\r\n      return (\r\n        <table className=\"aboutTable\">\r\n          <tr>\r\n            <th>Год производства</th>\r\n            <th>{this.props.film.year}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Страна</th>\r\n            <th>\r\n              {this.props.film.countries.map((country) => (\r\n                <p>{country.country}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Жанр</th>\r\n            <th>\r\n              {this.props.film.genres.map((genre) => (\r\n                <p>{genre.genre}</p>\r\n              ))}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Слоган</th>\r\n            <th>{this.props.film.slogan}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Режиссер</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DIRECTOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сценарист</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"WRITER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Оператор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"OPERATOR\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Композитор</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"COMPOSER\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Художник</th>\r\n            <th>\r\n              {staff.map((person) =>\r\n                person.professionKey === \"DESIGN\" ? (\r\n                  <p>{person.nameRu}</p>\r\n                ) : null\r\n              )}\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th>Бюджет</th>\r\n            <th>${this.props.film.budget}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в США</th>\r\n            <th>${this.props.film.grossUsa}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Сборы в мире</th>\r\n            <th>${this.props.film.grossWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Премьера в мире</th>\r\n            <th>${this.props.film.premiereWorld}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Возраст</th>\r\n            <th>${this.props.film.ratingAgeLimits}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Время</th>\r\n            <th>${this.props.film.filmLength}</th>\r\n          </tr>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default FilmTable;\r\n//export default (props) => (\r\n//   <table className=\"aboutTable\">\r\n//     <tr>\r\n//       <th>Карьера</th>\r\n//       <th>{props.actors.profession}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Рост</th>\r\n//       <th>{props.actors.growth} см</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Дата рождения</th>\r\n//       <th>\r\n//         {props.actors.birthday}, {props.actors.age} лет\r\n//       </th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Место рождения</th>\r\n//       <th>{props.actors.birthplace}</th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Жанры</th> <th></th>\r\n//     </tr>\r\n//     <tr>\r\n//       <th>Всего фильмов</th>\r\n//       <th>{props.actors.films.length}</th>\r\n//     </tr>\r\n//   </table>\r\n// );\r\n","C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\moviebot\\moviebot.js",[],"C:\\Users\\maxro\\Desktop\\kinopoisk\\src\\moviebot\\movieRecomendation\\movieRecomendation.js",["94"],"import React from \"react\";\r\n//import \"./casttable.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass CastTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { steps } = this.props;\r\n    const { recomendationList } = steps;\r\n\r\n    this.state = { recomendationList };\r\n  }\r\n  state = {\r\n    isLoaded: false,\r\n    error: null,\r\n  };\r\n  apiHandler(link) {\r\n    fetch(\r\n      `https://kinopoiskapiunofficial.tech/api/v2.1/films/search-by-filters?genre=${link}&order=RATING&type=FILM&ratingFrom=8&ratingTo=10&yearFrom=1888&yearTo=2020&page=1`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"X-API-KEY\": \"d900330b-700e-447a-905a-d5b8497d1cc8\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movielist: result,\r\n          });\r\n          //console.log(this.state);\r\n        },\r\n        (error) => {\r\n          console.log(\"error\");\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  //   componentDidUpdate(prevProps, prevState) {\r\n  //     if (prevState.id !== this.state.recomendationList.value) {\r\n  //       this.setState({\r\n  //         isLoaded: false,\r\n  //         error: null,\r\n  //       });\r\n  //       this.apiHandler(this.state.recomendationList.value);\r\n  //     }\r\n  //   }\r\n  componentDidMount() {\r\n    this.apiHandler(this.state.recomendationList.value);\r\n  }\r\n  render() {\r\n    const { error, isLoaded, movielist } = this.state;\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          Загрузка...\r\n          <img src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87_w200.gif\" />\r\n        </div>\r\n      );\r\n    } else {\r\n      //console.log(movielist);\r\n\r\n      let randomnum =\r\n        Math.floor(Math.random() * (movielist.films.length - 1 - 0 + 1)) + 0;\r\n      let movie = movielist.films[randomnum];\r\n      console.log(movie);\r\n      //actorArray.length = actorArray.length > 10 ? 10 : actorArray.length;\r\n      return (\r\n        <div className=\"staffList\">\r\n          <img\r\n            src={movie.posterUrl}\r\n            alt={movie.nameRu}\r\n            className=\"actor_table_img\"\r\n          ></img>\r\n          <NavLink to={\"/film/\" + movie.filmId} exact>\r\n            <p>{movie.nameRu}</p>\r\n          </NavLink>\r\n          <p>{movie.nameEn}</p>\r\n          <p>{movie.rating}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default CastTable;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":1,"nodeType":"101","endLine":11,"endColumn":2},{"ruleId":"95","replacedBy":"102"},{"ruleId":"97","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":64,"column":5,"nodeType":"106","messageId":"107","endLine":134,"endColumn":6},{"ruleId":"108","severity":1,"message":"109","line":45,"column":5,"nodeType":"110","endLine":45,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":46,"column":5,"nodeType":"110","endLine":46,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":52,"column":5,"nodeType":"106","messageId":"107","endLine":129,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":60,"column":13,"nodeType":"113","endLine":60,"endColumn":98},{"ruleId":"111","severity":1,"message":"112","line":58,"column":11,"nodeType":"113","endLine":58,"endColumn":96},{"ruleId":"111","severity":1,"message":"112","line":77,"column":11,"nodeType":"113","endLine":77,"endColumn":96},{"ruleId":"99","severity":1,"message":"100","line":5,"column":1,"nodeType":"101","endLine":29,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":4,"column":1,"nodeType":"101","endLine":32,"endColumn":3},{"ruleId":"114","severity":1,"message":"115","line":58,"column":11,"nodeType":"116","messageId":"117","endLine":58,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":79,"column":11,"nodeType":"113","endLine":79,"endColumn":96},{"ruleId":"111","severity":1,"message":"112","line":65,"column":11,"nodeType":"113","endLine":65,"endColumn":96},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["118"],["119"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'professions' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]